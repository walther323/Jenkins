
--------------------------------------------
--------------------------------------------
Notas curso basico Jenkins - Platzi
--------------------------------------------
--------------------------------------------

pendiente los anteriores puntos





*** Jenkins y su ecosistema de Plugins ***

  unidades que extienden jenkins
  
  Una de las razones por la cual Jenkins es adorado es porque tiene Plugins para una mayoría de cosas.
  Los plugins son unidades que extiende a Jenkins, después de instalarlo nuestra herramienta puede hacer algo nuevo, 
  es recomendado instalarlos con la opción de ““Download now and Install after restart”” y así Jenkins se va a encargar 
  de ejecutar todos los Jobs que estaban corriendo y cuando eso termine, lo va a instalar.
  
  ruta dentro de jenkins para la administracion de los plugins
    http://localhost:8080/pluginManager/
      todos los plugins
        buscar el plugin que se necesita
          --> recomendacion: descargar ahora y reintalar despues de reiniciar
            --> dejar el check de reinstalar jenkis cuando la instalacion este completa
  
  una vez instalado, ir a la adminstracion >> configuracion global, seleccionar nodejs e instalar la version que se necesite >> save
  
  
 
  
  *** Cadenas de Jobs *** 
  
  Primero instalamos el plugin Parameterized Trigger, igual cómo instalamos anteriormente y reiniciamos.

  Luego vamos a crear 2 jobs nuevos:
  
  watchers: 
  
  En este job, vamos a configure y vamos a “Build after other projects are built” y escribimos y escribimos hello-platzi, 
  sí hello-platzi es successful, quiero que se ejecute watchers.Y en la parte de executed shell, 
  escribimos : echo “Running after hello-platzi success” y guardamos.  
  
  parameterized: 
  
  Acepta parámetros cuando lo llamo. 
  Marcamos la opción “ This project is parameterized” y en el name escribimos ROOT_ID.
  Y en el execute shell: echo “calle with $ROOT_ID” y guardamos.
  Y en hello-platzi, en Downstream project, y estos se añaden cuando jenkins se da cuenta que su job tiene una dependencia con otro.
  
  Vamos al configure de hello-platzi y en el execute shell escribimos:
  
  echo “Hello Platzi from $NAME” Y añadir un build step que se llama : “Trigger/call build on other projects”, 
  y en projects to build escribimos parameterized y le damos en añadir parámetros, luego parámetros predefinidos y 
  escribimos: ROOT_ID=$BUILD_NUMBER
  
  BUILD_NUMBER es una variable de entorno, que es el valor de esta ejecución y guardamos.

  Le damos en “build with parameters” y entramos al console output de parameterized y vemos que la ejecución número tal, fue la que ejecutó a 
  parameterized. Corre hello-platzi, él llama declarativamente a parameterized e indirectamente a watchers.

  Corre los test para esta versión, cuando acabes, mandame esta versión a producción le pasó el id del commit, y se lo pasó a mí job que hace 
  deployment y cuando lo resuelvas me lo despliegas.  El sabe la cadena de ejecuciones que tuvo, y cuál fue el que inició este proceso.

  
  
  
  
  
  
  
  

